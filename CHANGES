Dancer 1.170
    [ David Precious ]
    * Fixed bug with status keyword not converting aliases (e.g. 'not_found') to
      real usable status lines with valid HTTP codes.
      Thanks to P Kishor for reporting this on the dancer-users mailing list!
    * Accept end_tag as a synonym for stop_tag when configuring TemplateToolkit.
      Thanks to James Ronan for bringing this up.

    [ Sawyer X]
    * Route::Cache store_route = store_path, beefed up docs
    * Changed names of limits in settings
    * Added documentation for it in Dancer.pm
    * More documentation about Module::Refresh dependency 
      (closes bug #48)
    * uri_for now accepts a boolean for not escaping URIs,
      and redirect calls uri_for with that boolean.
      (closes: bug #47)

    [ Alexis Sukrieh ]
    * Query string params are not dropped anymore when their value is 0. thanks
      to "Squeeks" for the report.
      (closes: bug #49)
    * Support for file uploads
      The Dancer::Request class provides a common interface to access file
      uploads. Syntactic sugar has been added to Dancer's as well
      (keyword 'upload').
      (closes whish #36)

    [ Franck Cuny ]
    * Support for automatic serialization/deserialization
      Dancer is now able to serialize route handler's response in various
      format (JSON, YAML, XML); and can also deserialize request body when
      appropriate.
      (closes: wish #29)


Dancer 1.160

    [ David Precious ]
    * Added session backend Dancer::Session::Simple
    * Dump session contents on development error page, if session is in use
    * Censor sensitive-looking information on development error page settings /
      session dumps, to help avoid passwords / card details etc being leaked.
    * Add deployment guide

    [ Alexis Sukrieh ]
    * Dancer helper propagates its perl executable into the generated
      $appname.pl script (FIX for RT #54759).
    * FIX for issue #34
      No more warnings undeer Win32 for tests script that needs a tempdir
    * FIX (unknown bug)
      The standalone server now parses commandline options (was broken
      since 1.140).
    * FIX for issue #37
      A new setting "confdir" is provided for making Dancer
      read the application configuration files from an
      alternate location.
    * Core settings can be initialized via environment
      variables, prefixed with "DANCER_" (e.g.  "DANCER_DAEMON"
      for the setting "daemon").
    * Config and command-line arguments are parsed and loaded at import time,
      rather than when the handler is initialized.
    * Routes are compiled at startup instead of being compiled whenever a 
      request is handled.  This can increase performances up to 50%.
    * FIX Params are not polluted anymore by the 'splat' keyword when no capture
      is needed by the pattern.
    * New feature 'auto_page' (closes: #41)
	  Lets the user have automatic route resolution for 
      requests that match an existing template in the views dir. Thanks to 
      David Precious for the idea and his help.

    [ Daniel Tasov ]
    * Plack environment is propagated to Dancer if none specified.

    [ Sawyer X ]
    * Route Caching with size and path number limits: Dancer::Route::Cache.
    * FIX for issue #39.
    * Dancer::ModuleLoader documentation
    * Cleaned Dancer::Template::Abstract docs
    * Cleaner die in Dancer::Engine if can't find engine
    * Added default route example in Dancer::Cookbook


Dancer 1.150

    [ Alexis Sukrieh ]
    * Refactored all core engines with Dancer::Engine
    * Support for engine configuration via config files
    * Each core template engine now uses start_tag/stop_tag from the
      configuration instead of harcoding '<%' and '%>'.
    * FIX for issue #34
      Cookies can now be used when the application is ran under a Plack 
      server.
    
    [ David Precious ]
    * Lots of documentation cleaning and fixes.
    * Make the session available to the views, if possible.
    * Added Dancer::Cookbook to provide lots of concrete examples for
      newcomers.
    * Helper script `dancer' now provides a default favicon.ico in the
      application public directory.
    * FIX for issue #30
      Added 'config' method to provide easy access to app config

    [ Anirvan Chatterjee ]
    * Various documentation typo fixes

    [ Danijel Tasov ]
    * FIX for issue #24
      Dancer now depends on MIME::Types rather than using
      File::MimeInfo::Simple which uses a fork().

    [ Paul Driver ]
    * Support for virtual location.
      It's now possible to mount a Dancer app under a user-defined prefix.

    [ Franck Cuny ]
    * Test scripts cleanup:
      + Cleanup is performed in test scripts when necessary
        (all temp files are removed at the end of the script).
      + FIX for issue #23
        Test scripts that try to write logfiles set the appdir.

Dancer 1.140

    * Dancer now depends on HTTP::Server::Simple::PSGI in
      order to rely on a PSGI environement even when running
      the app with the standalone server 
      (Thanks to Tatsuiko Miyagawa).
    * Dancer::Request object enhancements:
        + Dancer::Request now provide an accesor to the raw body
          of the request.
        + FIX for issue #13
          The params helper now provides accessors to route
          params, query string params and body params so the
          user can chose from which source they want to access
          params instead of dealing with a mixed structure.
        + Added accessors to referer and remote_address 
    * The Standalone server now uses the setting 'server' to 
      bind itself to the IP address given by the setting.
      Default value is 0.0.0.0

Dancer 1.130
    * Fix a memory leak that could occur between two 
      requests under mod_perl (Thanks to Nicolas Rennert for 
      the report and diagnosis).
    * remove all optional modules from the core, they are now 
      shipped as separate CPAN distributions:
      - Dancer::Template::MicroTemplate
      - Dancer::Session::Cookie
      - Dancer::Session::Memcached
      - Dancer::Logger::LogHandler
      - Dancer::Logger::Syslog
    * support for the `header' keyword in Dancer's syntax.
      The user is now able to alter response-headers in route 
      handlers.
    * support for `prefix' keyword in Dancer's syntax.
      A prefix can be set by the user before defining routes handlers.
      All route defined then will be automatically prefixed accordingly.
      
Dancer 1.122

    * Fix the test suite under Perl 5.8.x
    * Security Fix: protection from CRLF injection in 
      response headers (thanks to Mark Stosberg for the report).
    * Support for multi-valued params in GET/POST data (thanks to
      Mark Stosberg for the report).
    * Backward compatibility with old app.psgi files, don't die 
      when a request is initialized with a CGI::PSGI object.

Dancer 1.121

    * Fix for POST data parsing (was broken in 1.120)
      now Dancer depends on HTTP::Body for that.

Dancer 1.120

    * ROADMAP updated 
    * Dancer is now compliant with Plack::Server::Apache2
    * Remove the CGI.pm dependency, huge refactoring
    * POD typo fixes (Naveed)
    * Support for syntax-only importation (Sawyer X)
    * Remove the example/ directory, useless and deprecated 
    * New logger engine: Log::Handler (franck cuny)
    * New template engine Text::Microtemplate (franck cuny)
    * Remove compilation-time warnings catching (issue #14)

Dancer 1.110

    * Fix test script `t/11_logger/04_syslog.t'
    * Fix test script `t/10_template/05_template_toolkit.t'

Dancer 1.100

    * Support for multiple method routes at once with 'any'
    * Templates engines
        + Bug fixes in Dancer::Template::Simple (Jury Gorky)
        + Refactoring of the factory
        + option for disabling the layout in the template helper.
    * New session engine based on encrypted cookies (Alex Kapranof)
    * More HTTP codes supported for a better REST compat (Nate Jones)
    * Documentation updates 
    * script/dancer now requires an appname
    * New Makefile.PL with better metadata (CPAN Service)

Dancer 1.000

    * Support for Syslog logger (Dancer::Logger::Syslog)
    * Basic template engine so Template is no more a hard deps.
    * Memcache Session support (Dancer::Session::Memcache)
    * YAML file-based session support (Dancer::Session::YAML)
    * Lots of tests (more than 80% of the code is covered)

Dancer 0.9906
    
    * move from File::MimeInfo to File::MimeInfo::Simple for 
      smooth run on Mac OSX and Win32 systems.

Dancer 0.9005

    * Source code extract on error catching
    * Support for configurable error handling
    * New design for the starting app built with script/dancer

Dancer 0.9004

    * Support for PSGI/Plack environment
    * script/dancer helper script for bootstraping a new app

Dancer 0.9003

    * Detect differently compilation-time warnings and runtime warnings
      closes bug #48440 (Thanks to Enric Joffrion for the report, and to
      Vincent Pit for the diagnosis)

